@node Debugger
@section Debugger
@cindex Lisp Debugger
@cindex CLIM Debugger
@cindex Debugger

The debugger is used for interactively inspecting stack frame when the
unhandled conditions are signalled. Given high enough debug settings
it lets you inspecting frame local variables, evaluating code in it,
examining backtrace and choosing available restarts.

@menu
* Debugger usage::
* Keyboard shortcuts::
* Debugger API::
@end menu

@node Debugger usage
@subsection Debugger usage

To get up and running quickly with Debugger:

@enumerate
@item
 With Quicklisp loaded, invoke in repl:

  @t{(ql:quickload 'clim-debugger)}
@item
Run simple test condition:

  @t{(clim-debugger:with-debugger () (error "test"))}
@end enumerate

Debugger is highly inspired by Slime and uses Swank to gain
portability across implementations. Module is still under development
and some details may change in the future.

Selecting frame with a pointer switches its details and marks it
active. Each locale value may be inspected by selection with mouse
pointer. Active frame is distinguished from others with red
color. @t{Eval in frame} command evaluates expression in the active
frame.

@node Keyboard shortcuts
@subsection Keyboard shortcuts

Warning: these key accelerators may change in the future.

@table @samp
@item M-p
 Mark previous frame active
@item M-n
 Mark next frame active
@item m
 Show more frames
@item e
 Eval in active frame
@item TAB
 Toggle active frame details
@item [0-9]
 Invoke nth restart
@item q
 Quit debugger
@end table

@node Debugger API
@subsection Debugger API

@deffn {function} {debugger} condition me-or-my-encapsulation

Starts debugger with supplied condition. Second argument should be
supplied by an underlying implementation allowing to encapsulate or
supply different debugger for recursive debugger calls.
@end deffn

@deffn {macro} {with-debugger} options &body body

Wraps the code in @t{body} to invoke @clim debugger when condition is
signalled (binds @t{*debugger-hook*} to @t{#'debugger}). Bindings are
inherited by new threads. @t{options} are not used at the moment.
@end deffn

@deffn {function} {install-debugger}

Installs @t{clim-debugger} globally (no need to wrap body in
@t{with-debugger}.
@end deffn
